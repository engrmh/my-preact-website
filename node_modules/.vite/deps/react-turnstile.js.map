{
  "version": 3,
  "sources": ["../../react-turnstile/src/index.tsx"],
  "sourcesContent": ["import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  TurnstileObject,\r\n  TurnstileOptions,\r\n  SupportedLanguages,\r\n} from \"turnstile-types\";\r\n\r\nconst globalNamespace = (\r\n  typeof globalThis !== \"undefined\" ? globalThis : window\r\n) as any;\r\nlet turnstileState =\r\n  typeof globalNamespace.turnstile !== \"undefined\" ? \"ready\" : \"unloaded\";\r\nlet ensureTurnstile: () => Promise<any>;\r\n\r\n// Functions responsible for loading the turnstile api, while also making sure\r\n// to only load it once\r\nlet turnstileLoad: {\r\n  resolve: (value?: any) => void;\r\n  reject: (reason?: any) => void;\r\n};\r\nconst turnstileLoadPromise = new Promise((resolve, reject) => {\r\n  turnstileLoad = { resolve, reject };\r\n  if (turnstileState === \"ready\") resolve(undefined);\r\n});\r\n\r\n{\r\n  const TURNSTILE_LOAD_FUNCTION = \"cf__reactTurnstileOnLoad\";\r\n  const TURNSTILE_SRC = \"https://challenges.cloudflare.com/turnstile/v0/api.js\";\r\n\r\n  ensureTurnstile = () => {\r\n    if (turnstileState === \"unloaded\") {\r\n      turnstileState = \"loading\";\r\n      globalNamespace[TURNSTILE_LOAD_FUNCTION] = () => {\r\n        turnstileLoad.resolve();\r\n        turnstileState = \"ready\";\r\n        delete globalNamespace[TURNSTILE_LOAD_FUNCTION];\r\n      };\r\n      const url = `${TURNSTILE_SRC}?onload=${TURNSTILE_LOAD_FUNCTION}&render=explicit`;\r\n      const script = document.createElement(\"script\");\r\n      script.src = url;\r\n      script.async = true;\r\n      script.addEventListener(\"error\", () => {\r\n        turnstileLoad.reject(\"Failed to load Turnstile.\");\r\n        delete globalNamespace[TURNSTILE_LOAD_FUNCTION];\r\n      });\r\n      document.head.appendChild(script);\r\n    }\r\n    return turnstileLoadPromise;\r\n  };\r\n}\r\n\r\nexport default function Turnstile({\r\n  id,\r\n  className,\r\n  style,\r\n  sitekey,\r\n  action,\r\n  cData,\r\n  theme,\r\n  language,\r\n  tabIndex,\r\n  responseField,\r\n  responseFieldName,\r\n  size,\r\n  fixedSize,\r\n  retry,\r\n  retryInterval,\r\n  refreshExpired,\r\n  appearance,\r\n  execution,\r\n  userRef,\r\n  onVerify,\r\n  onLoad,\r\n  onError,\r\n  onExpire,\r\n  onTimeout,\r\n  onAfterInteractive,\r\n  onBeforeInteractive,\r\n  onUnsupported,\r\n}: TurnstileProps) {\r\n  const ownRef = useRef<HTMLDivElement | null>(null);\r\n  const inplaceState = useState<TurnstileCallbacks>({\r\n    onVerify,\r\n    onLoad,\r\n    onError,\r\n    onExpire,\r\n    onTimeout,\r\n    onAfterInteractive,\r\n    onBeforeInteractive,\r\n    onUnsupported,\r\n  })[0];\r\n\r\n  const ref = userRef ?? ownRef;\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n    let cancelled = false;\r\n    let widgetId = \"\";\r\n    (async () => {\r\n      // load turnstile\r\n      if (turnstileState !== \"ready\") {\r\n        try {\r\n          await ensureTurnstile();\r\n        } catch (e) {\r\n          inplaceState.onError?.(e);\r\n          return;\r\n        }\r\n      }\r\n      if (cancelled || !ref.current) return;\r\n      let boundTurnstileObject: BoundTurnstileObject;\r\n      const turnstileOptions: TurnstileOptions = {\r\n        sitekey,\r\n        action,\r\n        cData,\r\n        theme,\r\n        language,\r\n        tabindex: tabIndex,\r\n        \"response-field\": responseField,\r\n        \"response-field-name\": responseFieldName,\r\n        size,\r\n        retry,\r\n        \"retry-interval\": retryInterval,\r\n        \"refresh-expired\": refreshExpired,\r\n        appearance,\r\n        execution,\r\n        callback: (token: string) =>\r\n          inplaceState.onVerify?.(token, boundTurnstileObject),\r\n        \"error-callback\": (error?: any) =>\r\n          inplaceState.onError?.(error, boundTurnstileObject),\r\n        \"expired-callback\": (token: string) =>\r\n          inplaceState.onExpire?.(token, boundTurnstileObject),\r\n        \"timeout-callback\": () =>\r\n          inplaceState.onTimeout?.(boundTurnstileObject),\r\n        \"after-interactive-callback\": () =>\r\n          inplaceState.onAfterInteractive?.(boundTurnstileObject),\r\n        \"before-interactive-callback\": () =>\r\n          inplaceState.onBeforeInteractive?.(boundTurnstileObject),\r\n        \"unsupported-callback\": () =>\r\n          inplaceState.onUnsupported?.(boundTurnstileObject),\r\n      };\r\n\r\n      widgetId = window.turnstile.render(ref.current, turnstileOptions);\r\n      boundTurnstileObject = createBoundTurnstileObject(widgetId);\r\n      inplaceState.onLoad?.(widgetId, boundTurnstileObject);\r\n    })();\r\n    return () => {\r\n      cancelled = true;\r\n      if (widgetId) window.turnstile.remove(widgetId);\r\n    };\r\n  }, [\r\n    sitekey,\r\n    action,\r\n    cData,\r\n    theme,\r\n    language,\r\n    tabIndex,\r\n    responseField,\r\n    responseFieldName,\r\n    size,\r\n    retry,\r\n    retryInterval,\r\n    refreshExpired,\r\n    appearance,\r\n    execution,\r\n  ]);\r\n  useEffect(() => {\r\n    inplaceState.onVerify = onVerify;\r\n    inplaceState.onLoad = onLoad;\r\n    inplaceState.onError = onError;\r\n    inplaceState.onExpire = onExpire;\r\n    inplaceState.onTimeout = onTimeout;\r\n    inplaceState.onAfterInteractive = onAfterInteractive;\r\n    inplaceState.onBeforeInteractive = onBeforeInteractive;\r\n    inplaceState.onUnsupported = onUnsupported;\r\n  }, [\r\n    onVerify,\r\n    onLoad,\r\n    onError,\r\n    onExpire,\r\n    onTimeout,\r\n    onAfterInteractive,\r\n    onBeforeInteractive,\r\n    onUnsupported,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      id={id}\r\n      className={className}\r\n      style={\r\n        fixedSize\r\n          ? {\r\n              ...(style ?? {}),\r\n              width: size === \"compact\" ? \"130px\" : \"300px\",\r\n              height: size === \"compact\" ? \"120px\" : \"65px\",\r\n            }\r\n          : style\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport interface TurnstileProps extends TurnstileCallbacks {\r\n  sitekey: string;\r\n  action?: string;\r\n  cData?: string;\r\n  theme?: \"light\" | \"dark\" | \"auto\";\r\n  language?: SupportedLanguages | \"auto\";\r\n  tabIndex?: number;\r\n  responseField?: boolean;\r\n  responseFieldName?: string;\r\n  size?: \"normal\" | \"invisible\" | \"compact\";\r\n  fixedSize?: boolean;\r\n  retry?: \"auto\" | \"never\";\r\n  retryInterval?: number;\r\n  refreshExpired?: \"auto\" | \"manual\" | \"never\";\r\n  appearance?: \"always\" | \"execute\" | \"interaction-only\";\r\n  execution?: \"render\" | \"execute\";\r\n  id?: string;\r\n  userRef?: React.MutableRefObject<HTMLDivElement>;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport interface TurnstileCallbacks {\r\n  onVerify?: (token: string, boundTurnstile: BoundTurnstileObject) => void;\r\n  onLoad?: (widgetId: string, boundTurnstile: BoundTurnstileObject) => void;\r\n  onError?: (\r\n    error?: Error | any,\r\n    boundTurnstile?: BoundTurnstileObject\r\n  ) => void;\r\n  onExpire?: (token: string, boundTurnstile: BoundTurnstileObject) => void;\r\n  onTimeout?: (boundTurnstile: BoundTurnstileObject) => void;\r\n  onAfterInteractive?: (boundTurnstile: BoundTurnstileObject) => void;\r\n  onBeforeInteractive?: (boundTurnstile: BoundTurnstileObject) => void;\r\n  onUnsupported?: (boundTurnstile: BoundTurnstileObject) => void;\r\n}\r\n\r\nexport interface BoundTurnstileObject {\r\n  execute: (options?: TurnstileOptions) => void;\r\n  reset: () => void;\r\n  getResponse: () => void;\r\n  isExpired: () => boolean;\r\n}\r\n\r\nfunction createBoundTurnstileObject(widgetId: string): BoundTurnstileObject {\r\n  return {\r\n    execute: (options) => window.turnstile.execute(widgetId, options),\r\n    reset: () => window.turnstile.reset(widgetId),\r\n    getResponse: () => window.turnstile.getResponse(widgetId),\r\n    isExpired: () => window.turnstile.isExpired(widgetId),\r\n  };\r\n}\r\n\r\nexport function useTurnstile(): TurnstileObject {\r\n  // we are using state here to trigger a component re-render once turnstile\r\n  // loads, so the component using this hook gets the object once its loaded\r\n  const [_, setState] = useState(turnstileState);\r\n\r\n  useEffect(() => {\r\n    if (turnstileState === \"ready\") return;\r\n    turnstileLoadPromise.then(() => setState(turnstileState));\r\n  }, []);\r\n\r\n  return globalNamespace.turnstile;\r\n}\r\n"],
  "mappings": "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",
  "names": ["_a"]
}
